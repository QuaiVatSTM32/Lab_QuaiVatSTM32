/*
 * fsm_automatic.c
 *
 *  Created on: Nov 20, 2022
 *      Author: Admin
 */

#include "fsm_automatic.h"

int status1 = INIT, status2 = INIT;
int counter1 = 0, counter2 = 0;
void LED_display1(int led_index){
	switch(led_index){
		case INIT:
					HAL_GPIO_WritePin(LED_RED1_GPIO_Port, LED_RED1_Pin, 1);
					HAL_GPIO_WritePin(LED_GREEN1_GPIO_Port, LED_GREEN1_Pin, 1);
					HAL_GPIO_WritePin(LED_YELLOW1_GPIO_Port, LED_YELLOW1_Pin, 1);
					break;
		case RED:
					HAL_GPIO_WritePin(LED_RED1_GPIO_Port, LED_RED1_Pin, 0);
					HAL_GPIO_WritePin(LED_GREEN1_GPIO_Port, LED_GREEN1_Pin, 1);
					HAL_GPIO_WritePin(LED_YELLOW1_GPIO_Port, LED_YELLOW1_Pin, 1);
					break;
		case YELLOW:
					HAL_GPIO_WritePin(LED_RED1_GPIO_Port, LED_RED1_Pin, 1);
					HAL_GPIO_WritePin(LED_GREEN1_GPIO_Port, LED_GREEN1_Pin, 1);
					HAL_GPIO_WritePin(LED_YELLOW1_GPIO_Port, LED_YELLOW1_Pin, 0);
					break;
		case GREEN:
					HAL_GPIO_WritePin(LED_RED1_GPIO_Port, LED_RED1_Pin, 1);
					HAL_GPIO_WritePin(LED_GREEN1_GPIO_Port, LED_GREEN1_Pin, 0);
					HAL_GPIO_WritePin(LED_YELLOW1_GPIO_Port, LED_YELLOW1_Pin, 1);
					break;
	}
}
void LED_display2(int led_index){
	switch(led_index){
		case INIT:
					HAL_GPIO_WritePin(LED_RED2_GPIO_Port, LED_RED2_Pin, 1);
					HAL_GPIO_WritePin(LED_GREEN2_GPIO_Port, LED_GREEN2_Pin, 1);
					HAL_GPIO_WritePin(LED_YELLOW2_GPIO_Port, LED_YELLOW2_Pin, 1);
					break;
		case RED:
					HAL_GPIO_WritePin(LED_RED2_GPIO_Port, LED_RED2_Pin, 0);
					HAL_GPIO_WritePin(LED_GREEN2_GPIO_Port, LED_GREEN2_Pin, 1);
					HAL_GPIO_WritePin(LED_YELLOW2_GPIO_Port, LED_YELLOW2_Pin, 1);
					break;
		case YELLOW:
					HAL_GPIO_WritePin(LED_RED2_GPIO_Port, LED_RED2_Pin, 1);
					HAL_GPIO_WritePin(LED_GREEN2_GPIO_Port, LED_GREEN2_Pin, 1);
					HAL_GPIO_WritePin(LED_YELLOW2_GPIO_Port, LED_YELLOW2_Pin, 0);
					break;
		case GREEN:
					HAL_GPIO_WritePin(LED_RED2_GPIO_Port, LED_RED2_Pin, 1);
					HAL_GPIO_WritePin(LED_GREEN2_GPIO_Port, LED_GREEN2_Pin, 0);
					HAL_GPIO_WritePin(LED_YELLOW2_GPIO_Port, LED_YELLOW2_Pin, 1);
					break;
	}
}

void fsm_automatic_run(){
	if(timer_flag[0] == 1) {
		setTimer(1000, 0);
		counter1--, counter2--;
	}
	switch (status1){
		case INIT:
			if(counter1<0) {
				status1 = RED;
				counter1 = LED_RED_init;
			}
			LED_display1(INIT);
			break;
		case RED:
			if(counter1<0){
				status1 = GREEN;
				counter1 = LED_GREEN_init;
			}
			LED_display1(RED);
			break;
		case GREEN:
			if(counter1<0){
				status1 = YELLOW;
				counter1 = LED_YELLOW_init;
			}
			LED_display1(GREEN);
			break;
		case YELLOW:
			if(counter1<0){
				status1 = RED;
				counter1 = LED_RED_init;
			}
				LED_display1(YELLOW);
			break;
	}
	switch (status2){
			case INIT:
				if(counter2<0) {
					status2 = GREEN;
					counter2 = LED_GREEN_init;
				}
				LED_display2(INIT);
				break;
			case RED:
				if(counter2<0){
					status2 = GREEN;
					counter2 = LED_GREEN_init;
				}
				LED_display2(RED);
				break;
			case GREEN:
				if(counter2<0){
					status2 = YELLOW;
					counter2 = LED_YELLOW_init;
				}
				LED_display2(GREEN);
				break;
			case YELLOW:
				if(counter2<0){
					status2 = RED;
					counter2 = LED_RED_init;
				}
					LED_display2(YELLOW);
				break;
	}
}
